{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/renato/nlw4/aulas/moveit-next/src/components/Countdown.tsx\";\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nlet countdownTimeout;\nexport function Countdown() {\n  const times = 0.05 * 60;\n  const {\n    0: time,\n    1: setTime\n  } = useState(times);\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  const {\n    0: hasFinished,\n    1: setHasFinished\n  } = useState(false);\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(times);\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: [\"Ciclo encerrado \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"icons/checkmark.svg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n        onClick: resetCountdown,\n        children: [\"Abandonar ciclo \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"icons/close.svg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/renato/nlw4/aulas/moveit-next/src/components/Countdown.tsx"],"names":["useState","useEffect","styles","countdownTimeout","Countdown","times","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","startCountdown","resetCountdown","clearTimeout","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\n\nlet countdownTimeout:NodeJS.Timeout;\n\nexport function Countdown() {\n\n  const times = (0.05 * 60);\n  const [time, setTime] = useState(times);\n  const [ isActive, setIsActive] = useState(false);\n  const [ hasFinished, setHasFinished] = useState(false);\n\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n  function startCountdown(){\n    setIsActive(true);\n  }\n\n  function resetCountdown(){\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(times);\n  }\n\n  useEffect(()=>{\n    if (isActive && time > 0){\n      countdownTimeout = setTimeout(()=>{\n        setTime(time-1);\n      }, 1000)\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n    }\n  }, [isActive, time])\n  return (\n    <div>\n      <div className={styles.countdownContainer}>\n        <div>\n          <span>{minuteLeft}</span>\n          <span>{minuteRight}</span>\n        </div>\n        <span>:</span>\n        <div>\n          <span>{secondLeft}</span>\n          <span>{secondRight}</span>\n        </div>\n      </div>\n\n      {hasFinished ? (\n        <button \n        disabled\n        className={styles.countdownButton}      \n      >\n         Ciclo encerrado <img src=\"icons/checkmark.svg\" alt=\"\"/>\n      </button>\n      ): (\n        <>\n        {isActive ? (\n        <button \n          type=\"button\" \n          className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\n          onClick={resetCountdown}\n        >\n           Abandonar ciclo <img src=\"icons/close.svg\" alt=\"\"/>\n        </button>\n      ) : (\n        <button \n          type=\"button\" \n          className={styles.countdownButton}\n          onClick={startCountdown}\n        >\n          Iniciar um ciclo\n        </button>\n      ) }\n        </>\n      )}\n\n      \n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}